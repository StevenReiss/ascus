@Ascus(source="GITREPO:https://github.com/kasra-sh/PicoHTTPd/blob/d1f5426a1cde4857fde7247ed77a680567b1e135/src/main/java/ir/kasra_sh/picohttpd/http/response/ResponseString.java")
@Ascus(search="PACKAGE,PACKAGE_USED,500,GITREPO")
@Ascus(keywords={"@embedded","@web","server"})
@Ascus(keyterms={"server","request","ftp","@web","uri","url","routing","application","port","response","@embedded","property","http","callback","https"})
@Ascus(suggestedTerms={"application","case","static","video","audio","string"})
package edu.brown.cs.sample;

import edu.brown.cs.sump.annot.Ascus;
import edu.brown.cs.sump.annot.AscusPackage;
import edu.brown.cs.sump.annot.AscusClass;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.Map.Entry;

@AscusPackage
public interface EmbeddedWebServer {


@AscusClass(uses={Cookie.class})
abstract class Response {
   private ArrayList<Entry<String,String>> headers;
   private int status;
   private InputStream sBody;
   private boolean streamBody;
   private ArrayList<Cookie> cookies;
   private int sBodyLen;
   public abstract Response type(String mime);
   public abstract Response body(byte[] body);
   public abstract Response body(byte[] body,String mime);
   public abstract Response bodyJson(byte[] body);
   public abstract Response bodyHtml(byte[] body);
   public abstract Response bodyText(byte[] body);
   public abstract Response bodyBinary(byte[] body);
   public abstract Response header(String k,String v);
   public abstract byte[] asByteArray();
   public abstract Response setCookie(String key,String value,String[] opts);
   public abstract Response setMime(String mime);
}

@AscusClass
abstract class Cookie {
   private StringBuilder ck;
   public abstract Cookie set(String key,String value);
   public abstract Cookie opt(String op);
}

}

