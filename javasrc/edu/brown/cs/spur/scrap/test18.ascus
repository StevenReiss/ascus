@Ascus(source="GITREPO:https://github.com/alok-sm/ContactManagement/blob/c4268723eaf824c115eaa2c48b810b995a48e1b8/src/contactmanagement/AddContact.java")
@Ascus(search="PACKAGE,PACKAGE_USED,500,GITREPO")
@Ascus(keywords={"contact","@management"})
@Ascus(keyterms={"@management","address","mail","phone","contact","name"})
@Ascus(suggestedTerms={"group","layout","swing","contact","phone","panel"})
package edu.brown.cs.SAMPLE;

import edu.brown.cs.sump.annot.Ascus;
import edu.brown.cs.sump.annot.AscusPackage;
import edu.brown.cs.sump.annot.AscusClass;
import java.util.ArrayList;
import java.util.TreeSet;

@AscusPackage
public interface AddContact {


@AscusClass(uses={Node.class})
abstract class SearchThread extends Thread {
   private ArrayList<Node> searched;
   public SearchThread(ArrayList<Node> _original,String _query) { }
   public abstract void run();
}

@AscusClass
abstract class Node implements Comparable<Node> {
   public String email;
   public String contact2;
   public String contact1;
   public String address;
   public String name;
   public Node(String _name,String _contact1,String _contact2,String _email,String _address) { }
   public abstract int compareTo(Node node);
   public abstract boolean equals(Object o);
}

@AscusClass(uses={Node.class})
abstract class ParsingCSV {
   public ArrayList<Node> node;
   public ParsingCSV() { }
   public abstract void write(ArrayList<Node> node,String csv);
   public abstract void overwrite(ArrayList<Node> node,String csv);
   public abstract void export(ArrayList<Node> node);
}

@AscusClass(uses={ParsingCSV.class,Node.class})
abstract class Controller {
   public ParsingCSV p;
   public TreeSet<Node> list;
   public Controller() { }
   public abstract void insert(Node node);
   public abstract boolean delete(Node node);
   public abstract void getFromFile(String csv);
   public abstract void getFromFile();
   public abstract void clearList();
   public abstract void writeToFile(String csv);
   public abstract void writeToFileOverwrite(String csv);
   public abstract void editList(Node _old,Node _new);
   public abstract ArrayList<Node> search(String query);
   public abstract void export();
}

}

